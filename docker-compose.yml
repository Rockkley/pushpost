services:
  postgres:
    image: postgres:latest
    environment:
      POSTGRES_DB: pushpost_users
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: pushword
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - monitoring

  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus:/etc/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    networks:
      - monitoring

  grafana:
    image: grafana/grafana:latest
    ports:
      - "3001:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_SECURITY_ADMIN_USER=admin
    volumes:
      - grafana-data:/var/lib/grafana
    networks:
      - monitoring

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    ports:
      - "2181:2181"
    networks:
      - monitoring
      - kafka-network

  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_ADVERTISED_LISTENERS: "PLAINTEXT://kafka:9092"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
    ports:
      - "9092:9092"
    networks:
      - kafka-network
  # SERVICES
  user_service:
    build:
      context: .
      dockerfile: internal/services/user_service/Dockerfile
    ports:
      - "8081:8081"
    volumes:
      - ./configs:/configs
    env_file:
      - ./internal/services/user_service/.env
    networks:
      - monitoring

  #    restart: always

  api_gateway_service:
    build:
      context: .
      dockerfile: internal/services/api_gateway/Dockerfile
    ports:
      - "8080:8080"
    volumes:
      - ./configs:/configs
    env_file:
      - ./internal/services/api_gateway/.env
    networks:
      - monitoring

#    restart: always

  auth_service:
    build:
      context: .
      dockerfile: internal/services/auth_service/Dockerfile
    ports:
      - "8082:8082"
    volumes:
      - ./configs:/configs
    env_file:
      - ./internal/services/auth_service/.env
    networks:
      - monitoring
      - kafka-network

#    restart: always

networks:
  monitoring:
  kafka-network:

volumes:
  pgdata:
  prometheus:
  grafana-data:
  zookeeper-data:
  zookeeper-logs:
  kafka-data:

